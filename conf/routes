# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# for fun
GET         /                                                        controllers.Application.index()
GET         /cache                                                   controllers.Application.cache()
GET         /yacache                                                 controllers.Application.yacache()
GET         /cacheindex/:id                                          controllers.Application.cacheindex(id: Long)
GET         /yacachefast                                             controllers.Application.yacachefastjson()
GET         /cacheindexfast/:id                                      controllers.Application.cacheindexfastjson(id: Long)
# GET        /cachemodel/:id                               controllers.Application.cachemodel(id: Integer)
# GET        /cachemodelfast/:id                           controllers.Application.cachemodelfastjson(id: Integer)
GET         /cacheindexall/:id                                       controllers.Application.cacheindexall(id: Long)
GET         /yacacheindexall                                         controllers.Application.yacacheindexall()
GET         /testredirect                                            controllers.Application.testredirect()

# for high performence service
GET         /resources/video/index                                   controllers.VideoController.indexVideos()
GET         /resources/video/recommend                               controllers.VideoController.recommendVideos()
GET         /resources/video/:id                                     controllers.VideoController.singleVideo(id: Long)
GET         /resources/video/category/:category                      controllers.VideoController.category(category: String)
GET         /resources/video/category/:category/page/:page           controllers.VideoController.categoryByPage(category: String, page: Integer)
GET         /resources/video/music/:id                               controllers.VideoController.getMusic(id: Long)
GET         /resources/video/search/:content                         controllers.VideoController.search(content: String)
GET         /resources/video/search/:content/page/:page              controllers.VideoController.searchByPage(content: String, page: Integer)
GET         /resources/video/sidebar/:id                             controllers.VideoController.getSideBarVideos(id: Integer)

GET         /resources/tutorial/:id                                  controllers.TutorialController.singleTutorial(id: Long)
GET         /resources/tutorial/category/:category                   controllers.TutorialController.category(category: String)
GET         /resources/tutorial/category/:category/page/:page        controllers.TutorialController.categoryByPage(category: String, page: Integer)
GET         /resources/tutorial/search/:content                      controllers.TutorialController.search(content: String)
GET         /resources/tutorial/sidebar/:id                          controllers.TutorialController.getSideBarTutorials(id: Integer)

GET         /resources/music/hottest                                 controllers.MusicController.hottestMusic()
GET         /resources/music/category/:category                      controllers.MusicController.category(category: String)
GET         /resources/music/category/:category/page/:page           controllers.MusicController.categoryByPage(category: String, page: Integer)
GET         /resources/music/:id                                     controllers.MusicController.singleMusic(id: Long)
GET         /resources/music/search/:content                         controllers.MusicController.search(content: String)
GET         /resources/music/search/:content/page/:page              controllers.MusicController.searchByPage(content: String, page: Integer)
GET         /resources/music/sidebar/:id                             controllers.MusicController.getSideBarMusics(id: Integer)

GET         /resources/author/index                                  controllers.AuthorController.indexAuthors()
GET         /resources/author/index/page/:page                       controllers.AuthorController.indexAuthorsByPage(page: Integer)
GET         /resources/author/:id                                    controllers.AuthorController.singleAuthor(id: Long)
GET         /resources/author/videos/:id                             controllers.AuthorController.getVideos(id: Long)
GET         /resources/author/videos/:id/page/:page                  controllers.AuthorController.getVideosByPage(id: Long, page: Integer)
GET         /resources/author/search/:content                        controllers.AuthorController.search(content: String)

GET         /resources/version/latest                                controllers.VersionController.getLatestReleaseVersion()
GET         /resources/version/debug/latest                          controllers.VersionController.getLatestDebugVersion()

# for operation statistics

# for resources
GET         /statistics/video/:id/m/:mac/h/:host/u/:uuid             controllers.StatisticController.singleVideo(id: Integer, mac: String, host: String, uuid: String)
GET         /statistics/tutorial/:id/m/:mac/h/:host/u/:uuid          controllers.StatisticController.singleTutorial(id: Integer, mac: String, host: String, uuid: String)
GET         /statistics/music/:id/m/:mac/h/:host/u/:uuid             controllers.StatisticController.singleMusic(id: Integer, mac: String, host: String, uuid: String)
GET         /statistics/author/:id/m/:mac/h/:host/u/:uuid            controllers.StatisticController.singleAuthor(id: Integer, mac: String, host: String, uuid: String)

# for menu
GET         /statistics/menu/:id/m/:mac/h/:host/u/:uuid              controllers.StatisticController.menu(id: Integer, mac: String, host: String, uuid: String)

# for tab
GET         /statistics/tab/:id/m/:mac/h/:host/u/:uuid               controllers.StatisticController.tab(id: Integer, mac: String, host: String, uuid: String)

# for upload resource
POST        /uploadresource/gettk                                    controllers.UploadResourceController.getUploadToken()
POST        /uploadresource/finishcallback                           controllers.UploadResourceController.uploadFinishCallback()
POST        /uploadresource/prepareupload                            controllers.UploadResourceController.prepareUpload()

# for upload resource without auth
GET         /uploadresource/gettkna                                  controllers.UploadResourceController.getUploadTokenNoAuth()
POST        /uploadresource/finishcallbackna                         controllers.UploadResourceController.uploadFinishCallbackNoAuth()

# for auth
GET         /auth/preparebind/:mac                                   controllers.AuthController.isMacBind(mac: String)
POST        /auth/newbind                                            controllers.AuthController.bindMac()
POST        /auth/login                                              controllers.AuthController.login()
POST        /auth/feedback                                           controllers.FeedBackController.getFeedBack

# for crashlog

POST        /statistics/log                                          controllers.CrashLogController.newCrash()

# for share
GET         /share/:type/:idhash                                     controllers.ShareController.shareResource(type: String, idhash: String)

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                                            controllers.Assets.at(path="/public", file)
